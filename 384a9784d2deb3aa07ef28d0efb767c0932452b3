{
  "comments": [
    {
      "key": {
        "uuid": "5ac10518_ce03fa0b",
        "filename": "functest/utils/openstack_tacker.py",
        "patchSetId": 2
      },
      "lineNbr": 24,
      "author": {
        "id": 335
      },
      "writtenOn": "2016-12-16T07:17:12Z",
      "side": 1,
      "message": "hmmm was it not specific to tacker? same creds?",
      "revId": "384a9784d2deb3aa07ef28d0efb767c0932452b3",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5ac10518_0e8ca27e",
        "filename": "functest/utils/openstack_tacker.py",
        "patchSetId": 2
      },
      "lineNbr": 24,
      "author": {
        "id": 5579
      },
      "writtenOn": "2016-12-16T08:08:36Z",
      "side": 1,
      "message": "Correct. To use tacker (at least trozet\u0027s fork) we need to source a modified credentials file with different TENANT_NAME, ENDPOINT_URL etc.\nThe way we handle it in the SFC testcase is we fetch the new credentials and override the openrc. This will break tacker operations.",
      "parentUuid": "5ac10518_ce03fa0b",
      "revId": "384a9784d2deb3aa07ef28d0efb767c0932452b3",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5ac10518_6ef446f2",
        "filename": "functest/utils/openstack_tacker.py",
        "patchSetId": 2
      },
      "lineNbr": 24,
      "author": {
        "id": 5959
      },
      "writtenOn": "2016-12-16T08:33:14Z",
      "side": 1,
      "message": "Can you help to provide the RC file for tacker? The reason why I update here is, the get_credentials() has been refactored. \nHow about implementing get_credentials here in openstack_tacker to handle the case you mentioned?\nI don\u0027t think adding the complexity to os_utils.get_credentials() to handle tacker or not is an option.",
      "parentUuid": "5ac10518_0e8ca27e",
      "revId": "384a9784d2deb3aa07ef28d0efb767c0932452b3",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5ac10518_8ece52b3",
        "filename": "functest/utils/openstack_tacker.py",
        "patchSetId": 2
      },
      "lineNbr": 24,
      "author": {
        "id": 5579
      },
      "writtenOn": "2016-12-16T08:46:34Z",
      "side": 1,
      "message": "I agree bloating the os_utils.get_credentials for this corner case is counter productive. \n\nFor now, we have some custom logic in sfc to fetch and source the correct rc file.\nI don\u0027t know if it should be moved here, because eventually (during the D release)\nwe aim to upgrade to upstream tacker and that is supposed not to require special \ncredentials\n\nI would for now just delete this line and leave the logic for the credentials in SFC,\nuntil the switch to the upstream is complete.\n\nThe relevant logic is here (get_tackerc_file \u0026 set_tacker_rc_file_env)\n https://gerrit.opnfv.org/gerrit/gitweb?p\u003dsfc.git;a\u003dblob;f\u003dsfc/tests/functest/run_tests.py;h\u003de66e4c1168b58bbde42d12b4412dc56b1b68adb1;hb\u003drefs/heads/master#l46",
      "parentUuid": "5ac10518_6ef446f2",
      "revId": "384a9784d2deb3aa07ef28d0efb767c0932452b3",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5ac10518_ce3bfa9a",
        "filename": "functest/utils/openstack_tacker.py",
        "patchSetId": 2
      },
      "lineNbr": 24,
      "author": {
        "id": 5959
      },
      "writtenOn": "2016-12-16T08:55:38Z",
      "side": 1,
      "message": "Upgrading to upstream sounds awesome as it will make the tackerclient back to the main road again.\n\nI would not agree with deleting the line as it will break this function. I would prefer to leave it here as is.\n\nOnce we decide to enable tacker, a separate patch is needed to handle the case.",
      "parentUuid": "5ac10518_8ece52b3",
      "revId": "384a9784d2deb3aa07ef28d0efb767c0932452b3",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    }
  ]
}