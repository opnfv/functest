#!/usr/bin/python
#
# Copyright (c) 2015 All rights reserved
# This program and the accompanying materials
# are made available under the terms of the Apache License, Version 2.0
# which accompanies this distribution, and is available at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Execute Multisite Tempest test cases
##

import ConfigParser
import os
import shutil
import functest.utils.functest_utils as ft_utils
import functest.utils.functest_logger as ft_logger
from run_tempest import configure_tempest

logger = ft_logger.Logger("multisite").getLogger()


def configure_tempest_multisite(deployment_dir):
    """
    Add/update needed parameters into tempest.conf file generated by Rally
    """
    logger.debug("configure the tempest")
    configure_tempest(deployment_dir)

    logger.debug("Finding tempest.conf file...")
    tempest_conf_file = deployment_dir + "/tempest.conf"
    if not os.path.isfile(tempest_conf_file):
        logger.error("Tempest configuration file %s NOT found."
                     % tempest_conf_file)
        exit(-1)

    # Copy tempest.conf to /home/opnfv/functest/results/tempest/
    cur_path = os.path.split(os.path.realpath(__file__))[0]
    shutil.copyfile(tempest_conf_file, cur_path + '/tempest_multisite.conf')
    tempest_conf_file = cur_path + "/tempest_multisite.conf"

    logger.debug("Updating selected tempest.conf parameters...")
    config = ConfigParser.RawConfigParser()
    config.read(tempest_conf_file)
    config.set('service_available', 'kingbird', 'true')
    cmd = "openstack endpoint show kingbird | grep publicurl |\
           awk '{print $4}'"
    kingbird_endpoint_details = "".join(os.popen(cmd).read().split())
    kingbird_endpoint_url = kingbird_endpoint_details.rsplit('/', 1)[0] + \
        '/'
    kingbird_api_version = kingbird_endpoint_details.rsplit('/', 1)[1]

    try:
        config.add_section("kingbird")
    except Exception:
        logger.info('kingbird section exist')
    config.set('kingbird', 'endpoint_type', 'publicURL')
    config.set('kingbird', 'TIME_TO_SYNC', '20')
    config.set('kingbird', 'endpoint_url', kingbird_endpoint_url)
    config.set('kingbird', 'api_version', kingbird_api_version)
    with open(tempest_conf_file, 'wb') as config_file:
        config.write(config_file)

    return True


def main():

    deployment_dir = ft_utils.get_deployment_dir(logger)
    configure_tempest_multisite(deployment_dir)


if __name__ == '__main__':
    main()
