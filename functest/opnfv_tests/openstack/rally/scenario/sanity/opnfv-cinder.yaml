  CinderVolumes.create_and_delete_snapshot:
    -
      args:
        force: false
      context:
        {% call user_context(tenants_amount, users_amount, use_existing_users) %}
        quotas:
          {{ unlimited_volumes() }}
        {{ volumes() }}
        {% endcall %}
      runner:
        {{ constant_runner(concurrency=concurrency, times=iterations, is_smoke=smoke) }}
      sla:
        {{ no_failures_sla() }}

  CinderVolumes.create_and_delete_volume:
    -
      args:
        size:
          max: 1
          min: 1
      context:
        {% call user_context(tenants_amount, users_amount, use_existing_users) %}
        quotas:
          {{ unlimited_volumes() }}
        {% endcall %}
      runner:
        {{ constant_runner(concurrency=concurrency, times=iterations, is_smoke=smoke) }}
      sla:
        {{ no_failures_sla() }}
    -
      args:
        {{ vm_params(image_name,none,1) }}
      context:
        {% call user_context(tenants_amount, users_amount, use_existing_users) %}
        quotas:
          {{ unlimited_volumes() }}
        {% endcall %}
      runner:
        {{ constant_runner(concurrency=concurrency, times=iterations, is_smoke=smoke) }}
      sla:
        {{ no_failures_sla() }}
    -
      args:
        size: 1
      context:
        {% call user_context(tenants_amount, users_amount, use_existing_users) %}
        quotas:
          {{ unlimited_volumes() }}
        {% endcall %}
      runner:
        {{ constant_runner(concurrency=concurrency, times=iterations, is_smoke=smoke) }}
      sla:
        {{ no_failures_sla() }}

  CinderVolumes.create_and_extend_volume:
    -
      args:
        new_size: 2
        size: 1
      context:
        {% call user_context(tenants_amount, users_amount, use_existing_users) %}
        quotas:
          {{ unlimited_volumes() }}
        {% endcall %}
      runner:
        {{ constant_runner(concurrency=concurrency, times=iterations, is_smoke=smoke) }}
      sla:
        {{ no_failures_sla() }}

  CinderVolumes.create_from_volume_and_delete_volume:
    -
      args:
        size: 1
      context:
        {% call user_context(tenants_amount, users_amount, use_existing_users) %}
        quotas:
          {{ unlimited_volumes() }}
        {{ volumes() }}
        {% endcall %}
      runner:
        {{ constant_runner(concurrency=concurrency, times=iterations, is_smoke=smoke) }}
      sla:
        {{ no_failures_sla() }}
