{
  "comments": [
    {
      "key": {
        "uuid": "1a76adc5_2c8e027a",
        "filename": "ci/prepare_env.py",
        "patchSetId": 3
      },
      "lineNbr": 58,
      "author": {
        "id": 459
      },
      "writtenOn": "2016-09-29T13:23:49Z",
      "side": 1,
      "message": "If we keep this way (CONF.functest_conf_dir), I would even remove these global variables here and put CONF.functest_conf_dir directly in the code instead of FUNCTEST_CONF_DIR, since they have almost the same length.",
      "revId": "c4100d0c4e924fafc2716e387daf1ef9648fd84a",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a76adc5_afe684ae",
        "filename": "ci/prepare_env.py",
        "patchSetId": 3
      },
      "lineNbr": 58,
      "author": {
        "id": 2651
      },
      "writtenOn": "2016-09-30T07:37:16Z",
      "side": 1,
      "message": "I agree. I just don\u0027t want to change the original implementation. Anyway I will change them according to your opinion",
      "parentUuid": "1a76adc5_2c8e027a",
      "revId": "c4100d0c4e924fafc2716e387daf1ef9648fd84a",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a76adc5_eceb2a11",
        "filename": "ci/prepare_env.py",
        "patchSetId": 3
      },
      "lineNbr": 65,
      "author": {
        "id": 459
      },
      "writtenOn": "2016-09-29T13:23:49Z",
      "side": 1,
      "message": "For example:\nENV_FILE \u003d CONF.functest_conf_dir + \"/env_active\"",
      "revId": "c4100d0c4e924fafc2716e387daf1ef9648fd84a",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a76adc5_0cf1c601",
        "filename": "ci/prepare_env.py",
        "patchSetId": 3
      },
      "lineNbr": 129,
      "author": {
        "id": 459
      },
      "writtenOn": "2016-09-29T13:23:49Z",
      "side": 1,
      "message": "Same here, instead of FUNCTEST_CONF_DIR, CONF.functest_data_dir",
      "revId": "c4100d0c4e924fafc2716e387daf1ef9648fd84a",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a76adc5_2cc28234",
        "filename": "testcases/Controllers/ONOS/Teston/adapters/foundation.py",
        "patchSetId": 3
      },
      "lineNbr": 60,
      "author": {
        "id": 459
      },
      "writtenOn": "2016-09-29T13:23:49Z",
      "side": 1,
      "message": "you do it here, you don\u0027t declare this variables as global, you use them directly inside the functions. So, the other scripts should behave similar in my opinion.",
      "revId": "c4100d0c4e924fafc2716e387daf1ef9648fd84a",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dad5f5cf_9476aa05",
        "filename": "testcases/features/doctor.py",
        "patchSetId": 3
      },
      "lineNbr": 25,
      "author": {
        "id": 3405
      },
      "writtenOn": "2016-10-05T19:26:14Z",
      "side": 1,
      "message": "I would have deleted that.",
      "revId": "c4100d0c4e924fafc2716e387daf1ef9648fd84a",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dad5f5cf_65a10ea9",
        "filename": "testcases/features/doctor.py",
        "patchSetId": 3
      },
      "lineNbr": 25,
      "author": {
        "id": 2651
      },
      "writtenOn": "2016-10-09T01:37:26Z",
      "side": 1,
      "message": "why? config_functest.CONF is used and cann\u0027t be imported directly, because it is an object, according  to openstack import rule, I cannot come up with a method using it but not doing it in this way, and in openstack code, they always use it like this.",
      "parentUuid": "dad5f5cf_9476aa05",
      "revId": "c4100d0c4e924fafc2716e387daf1ef9648fd84a",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dad5f5cf_8b876161",
        "filename": "testcases/features/doctor.py",
        "patchSetId": 3
      },
      "lineNbr": 25,
      "author": {
        "id": 3405
      },
      "writtenOn": "2016-10-10T16:24:32Z",
      "side": 1,
      "message": "Agree. I have read your previous reviews.\nI thought CONF was quite useless as functest_yaml \u003d config_functest.CONF.functest_yaml was not so far.",
      "parentUuid": "dad5f5cf_65a10ea9",
      "revId": "c4100d0c4e924fafc2716e387daf1ef9648fd84a",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dad5f5cf_54ee028d",
        "filename": "testcases/vnf/vRNC/parser.py",
        "patchSetId": 3
      },
      "lineNbr": 19,
      "author": {
        "id": 3405
      },
      "writtenOn": "2016-10-05T19:27:38Z",
      "side": 1,
      "message": "Please respect the openstack guidelines. The first import order was better.",
      "revId": "c4100d0c4e924fafc2716e387daf1ef9648fd84a",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dad5f5cf_45b08af4",
        "filename": "testcases/vnf/vRNC/parser.py",
        "patchSetId": 3
      },
      "lineNbr": 19,
      "author": {
        "id": 2651
      },
      "writtenOn": "2016-10-09T01:37:26Z",
      "side": 1,
      "message": "I didn\u0027t reorganize the import manually, I always use pycharm shortcut key, maybe because in my OS, argparse is considered as a third part library.",
      "parentUuid": "dad5f5cf_54ee028d",
      "revId": "c4100d0c4e924fafc2716e387daf1ef9648fd84a",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dad5f5cf_741786a4",
        "filename": "utils/config_functest.py",
        "patchSetId": 3
      },
      "lineNbr": 11,
      "author": {
        "id": 3405
      },
      "writtenOn": "2016-10-05T19:26:14Z",
      "side": 1,
      "message": "please add it in ConfigFunctest",
      "revId": "c4100d0c4e924fafc2716e387daf1ef9648fd84a",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dad5f5cf_e5941e46",
        "filename": "utils/config_functest.py",
        "patchSetId": 3
      },
      "lineNbr": 11,
      "author": {
        "id": 2651
      },
      "writtenOn": "2016-10-09T01:37:26Z",
      "side": 1,
      "message": "this method maybe will be used in parsing testcases.yaml later, so I prefer to leave it here for now.",
      "parentUuid": "dad5f5cf_741786a4",
      "revId": "c4100d0c4e924fafc2716e387daf1ef9648fd84a",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dad5f5cf_4b817949",
        "filename": "utils/config_functest.py",
        "patchSetId": 3
      },
      "lineNbr": 11,
      "author": {
        "id": 3405
      },
      "writtenOn": "2016-10-10T16:24:32Z",
      "side": 1,
      "message": "I\u0027m sorry I don\u0027t see the purpose. You can define it as static method.",
      "parentUuid": "dad5f5cf_e5941e46",
      "revId": "c4100d0c4e924fafc2716e387daf1ef9648fd84a",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dad5f5cf_eb95cd88",
        "filename": "utils/config_functest.py",
        "patchSetId": 3
      },
      "lineNbr": 19,
      "author": {
        "id": 3405
      },
      "writtenOn": "2016-10-10T16:24:32Z",
      "side": 1,
      "message": "!!!",
      "revId": "c4100d0c4e924fafc2716e387daf1ef9648fd84a",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dad5f5cf_94e46aad",
        "filename": "utils/config_functest.py",
        "patchSetId": 3
      },
      "lineNbr": 29,
      "author": {
        "id": 3405
      },
      "writtenOn": "2016-10-05T19:26:14Z",
      "side": 1,
      "message": "object is useless, isn\u0027t it?",
      "revId": "c4100d0c4e924fafc2716e387daf1ef9648fd84a",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dad5f5cf_65b6eede",
        "filename": "utils/config_functest.py",
        "patchSetId": 3
      },
      "lineNbr": 29,
      "author": {
        "id": 2651
      },
      "writtenOn": "2016-10-09T01:37:26Z",
      "side": 1,
      "message": "I think It is all about coding habits, not a wrong way. If not subclass any class(including object) obviously, It will inherit object implicitly in python3, and lead to an old-style class in python2. And I prefer to using it in this way, according to http://stackoverflow.com/questions/4015417/python-class-inherits-object",
      "parentUuid": "dad5f5cf_94e46aad",
      "revId": "c4100d0c4e924fafc2716e387daf1ef9648fd84a",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a76adc5_ac7a1275",
        "filename": "utils/config_functest.py",
        "patchSetId": 3
      },
      "lineNbr": 30,
      "author": {
        "id": 459
      },
      "writtenOn": "2016-09-29T13:23:49Z",
      "side": 1,
      "message": "To be safer, I would check that the env var and the file exists.\n\nif not os.path.isfile(config_functest) ...",
      "revId": "c4100d0c4e924fafc2716e387daf1ef9648fd84a",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a76adc5_cc7f4e65",
        "filename": "utils/config_functest.py",
        "patchSetId": 3
      },
      "lineNbr": 39,
      "author": {
        "id": 459
      },
      "writtenOn": "2016-09-29T13:23:49Z",
      "side": 1,
      "message": "why not calling this function get_functest_yaml ?",
      "revId": "c4100d0c4e924fafc2716e387daf1ef9648fd84a",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a76adc5_8f01483a",
        "filename": "utils/config_functest.py",
        "patchSetId": 3
      },
      "lineNbr": 39,
      "author": {
        "id": 2651
      },
      "writtenOn": "2016-09-30T07:37:16Z",
      "side": 1,
      "message": "get_functest_yaml is no longer exist, I delete it, everywhere use get_functest_yaml will use functest_yaml instead",
      "parentUuid": "1a76adc5_cc7f4e65",
      "revId": "c4100d0c4e924fafc2716e387daf1ef9648fd84a",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a76adc5_ec848a5f",
        "filename": "utils/config_functest.py",
        "patchSetId": 3
      },
      "lineNbr": 46,
      "author": {
        "id": 459
      },
      "writtenOn": "2016-09-29T13:23:49Z",
      "side": 1,
      "message": "The only thing I don\u0027t like about this class is that whenever we need to add a new line in config_functest.yaml we also need to add it here... 2 places to be maintained for the same thing...",
      "revId": "c4100d0c4e924fafc2716e387daf1ef9648fd84a",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a76adc5_8f8868c6",
        "filename": "utils/config_functest.py",
        "patchSetId": 3
      },
      "lineNbr": 46,
      "author": {
        "id": 2651
      },
      "writtenOn": "2016-09-30T07:37:16Z",
      "side": 1,
      "message": "Yes, but lots of configurations are used multiple places, when we change one property, we need to search all over the project. In this way the upstream use is independent from the configuration implementation, conform to decouple. And I think the code of getting properties all over the project is very ugly. :)",
      "parentUuid": "1a76adc5_ec848a5f",
      "revId": "c4100d0c4e924fafc2716e387daf1ef9648fd84a",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dad5f5cf_541282b5",
        "filename": "utils/config_functest.py",
        "patchSetId": 3
      },
      "lineNbr": 50,
      "author": {
        "id": 3405
      },
      "writtenOn": "2016-10-05T19:26:14Z",
      "side": 1,
      "message": "They could be defined as staticmethods.\nCould they be factorized?",
      "revId": "c4100d0c4e924fafc2716e387daf1ef9648fd84a",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dad5f5cf_25ab068b",
        "filename": "utils/config_functest.py",
        "patchSetId": 3
      },
      "lineNbr": 50,
      "author": {
        "id": 2651
      },
      "writtenOn": "2016-10-09T01:37:26Z",
      "side": 1,
      "message": "\u0027self\u0027 is used, in this way I don\u0027t know how to make it a staticmethod. Maybe you can tell me how?\n\nNaming is quite arbitrary, how to factorize them?",
      "parentUuid": "dad5f5cf_541282b5",
      "revId": "c4100d0c4e924fafc2716e387daf1ef9648fd84a",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dad5f5cf_2b7c3572",
        "filename": "utils/config_functest.py",
        "patchSetId": 3
      },
      "lineNbr": 50,
      "author": {
        "id": 3405
      },
      "writtenOn": "2016-10-10T16:24:32Z",
      "side": 1,
      "message": "That was just a proposal. We could have defined static methods instead of getters. Or you could load all the variables in only one parsing. Else the object is quite useless isn\u0027t it? Maybe I\u0027m wrong...",
      "parentUuid": "dad5f5cf_25ab068b",
      "revId": "c4100d0c4e924fafc2716e387daf1ef9648fd84a",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    }
  ]
}