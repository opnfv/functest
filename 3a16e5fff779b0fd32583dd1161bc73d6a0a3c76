{
  "comments": [
    {
      "key": {
        "uuid": "1aa4ed85_0eb6fdd9",
        "filename": "functest/api/base.py",
        "patchSetId": 15
      },
      "lineNbr": 51,
      "author": {
        "id": 2651
      },
      "writtenOn": "2017-07-19T06:56:47Z",
      "side": 1,
      "message": "why Url() is a base class? where else it will be used except for server.py?",
      "revId": "3a16e5fff779b0fd32583dd1161bc73d6a0a3c76",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1aa4ed85_2e32d910",
        "filename": "functest/api/base.py",
        "patchSetId": 15
      },
      "lineNbr": 51,
      "author": {
        "id": 5441
      },
      "writtenOn": "2017-07-19T07:02:44Z",
      "side": 1,
      "message": "Although this class is only used by url.py, I do not think it is a big issue. \nBut it is fine with me to move this to url.py",
      "parentUuid": "1aa4ed85_0eb6fdd9",
      "revId": "3a16e5fff779b0fd32583dd1161bc73d6a0a3c76",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1aa4ed85_aea3299d",
        "filename": "functest/api/server.py",
        "patchSetId": 15
      },
      "lineNbr": 1,
      "author": {
        "id": 2651
      },
      "writtenOn": "2017-07-19T06:56:47Z",
      "side": 1,
      "message": "in terms of this file, I would recommend to leverage an entry method like main() to hold all the procedures, rather than mingle variable definition, method definition and some processes all together",
      "revId": "3a16e5fff779b0fd32583dd1161bc73d6a0a3c76",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1aa4ed85_ceff8533",
        "filename": "functest/api/server.py",
        "patchSetId": 15
      },
      "lineNbr": 56,
      "author": {
        "id": 2651
      },
      "writtenOn": "2017-07-19T06:56:47Z",
      "side": 1,
      "message": "port is not used?",
      "revId": "3a16e5fff779b0fd32583dd1161bc73d6a0a3c76",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1aa4ed85_6e58d156",
        "filename": "functest/api/server.py",
        "patchSetId": 15
      },
      "lineNbr": 56,
      "author": {
        "id": 5441
      },
      "writtenOn": "2017-07-19T07:02:44Z",
      "side": 1,
      "message": "It is 5000 by default.",
      "parentUuid": "1aa4ed85_ceff8533",
      "revId": "3a16e5fff779b0fd32583dd1161bc73d6a0a3c76",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1aa4ed85_38669a52",
        "filename": "functest/api/server.py",
        "patchSetId": 15
      },
      "lineNbr": 56,
      "author": {
        "id": 2651
      },
      "writtenOn": "2017-07-20T06:34:10Z",
      "side": 1,
      "message": "three problems introduced if doing so:\n1) a configuration is set in config_functest.yml, but will never be used? 2) 5000 is fixed, not allow to change?\n3) if the user is not familiar with flask, he/she should study and checkout which is the default port first?",
      "parentUuid": "1aa4ed85_6e58d156",
      "revId": "3a16e5fff779b0fd32583dd1161bc73d6a0a3c76",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    }
  ]
}