  NovaServers.boot_and_live_migrate_server:
    - args:
        {{ vm_params(image_name, flavor_name) }}
        block_migration: {{ block_migration }}
        nics:
          - net-id: {{ netid }}
      context:
        {{ user_context(tenants_amount, users_amount, use_existing_users) }}
      runner:
        {{ constant_runner(concurrency=concurrency, times=iterations, is_smoke=smoke) }}
      sla:
        {{ no_failures_sla() }}

  NovaServers.boot_server_attach_created_volume_and_live_migrate:
    -
      args:
        {{ vm_params(image_name, flavor_name) }}
        size: 1
        block_migration: {{ block_migration }}
        boot_server_kwargs:
            nics:
              - net-id: {{ netid }}
      context:
        {{ user_context(tenants_amount, users_amount, use_existing_users) }}
      runner:
        {{ constant_runner(concurrency=concurrency, times=iterations, is_smoke=smoke) }}
      sla:
        {{ no_failures_sla() }}

  NovaServers.boot_server_from_volume_and_live_migrate:
    - args:
        {{ vm_params(image_name, flavor_name) }}
        block_migration: {{ block_migration }}
        volume_size: 1
        force_delete: false
        nics:
          - net-id: {{ netid }}
      context:
        {{ user_context(tenants_amount, users_amount, use_existing_users) }}
      runner:
        {{ constant_runner(concurrency=concurrency, times=iterations, is_smoke=smoke) }}
      sla:
        {{ no_failures_sla() }}

  NovaKeypair.boot_and_delete_server_with_keypair:
    -
      args:
        {{ vm_params(image_name, flavor_name) }}
        boot_server_kwargs:
            nics:
              - net-id: {{ netid }}
      context:
        {% call user_context(tenants_amount, users_amount, use_existing_users) %}
        quotas:
          {{ unlimited_neutron() }}
          {{ unlimited_nova(keypairs=true) }}
        {% endcall %}
      runner:
        {{ constant_runner(concurrency=concurrency, times=iterations, is_smoke=smoke) }}
      sla:
        {{ no_failures_sla() }}

  NovaServers.boot_server_from_volume_and_delete:
    -
      args:
        {{ vm_params(image_name, flavor_name) }}
        volume_size: 1
        nics:
          - net-id: {{ netid }}
      context:
        {% call user_context(tenants_amount, users_amount, use_existing_users) %}
        quotas:
          {{ unlimited_volumes() }}
          {{ unlimited_neutron() }}
          {{ unlimited_nova() }}
        {% endcall %}
      runner:
        {{ constant_runner(concurrency=concurrency, times=iterations, is_smoke=smoke) }}
      sla:
        {{ no_failures_sla() }}

  NovaServers.pause_and_unpause_server:
    -
      args:
        {{ vm_params(image_name, flavor_name) }}
        force_delete: false
        nics:
          - net-id: {{ netid }}
      context:
        {% call user_context(tenants_amount, users_amount, use_existing_users) %}
        quotas:
          {{ unlimited_neutron() }}
          {{ unlimited_nova() }}
        {% endcall %}
      runner:
        {{ constant_runner(concurrency=concurrency, times=iterations, is_smoke=smoke) }}
      sla:
        {{ no_failures_sla() }}

  NovaServers.boot_and_migrate_server:
    - args:
        {{ vm_params(image_name, flavor_name) }}
        nics:
          - net-id: {{ netid }}
      context:
        {{ user_context(tenants_amount, users_amount, use_existing_users) }}
      runner:
        {{ constant_runner(concurrency=concurrency, times=iterations, is_smoke=smoke) }}
      sla:
        {{ no_failures_sla() }}

  NovaServers.boot_server_and_list_interfaces:
    -
      args:
        {{ vm_params(image_name, flavor_name) }}
        nics:
          - net-id: {{ netid }}
      context:
        {% call user_context(tenants_amount, users_amount, use_existing_users) %}
        network: {}
        {% endcall %}
      runner:
        {{ constant_runner(concurrency=concurrency, times=iterations, is_smoke=smoke) }}
      sla:
        {{ no_failures_sla() }}

  NovaServers.boot_server_associate_and_dissociate_floating_ip:
    -
      args:
        {{ vm_params(image_name, flavor_name) }}
        floating_network: {{ floating_network }}
        nics:
          - net-id: {{ netid }}
      context:
        {% call user_context(tenants_amount, users_amount, use_existing_users) %}
        network: {}
        {% endcall %}
      runner:
        {{ constant_runner(concurrency=concurrency, times=iterations, is_smoke=smoke) }}
      sla:
        {{ no_failures_sla() }}

  NovaServerGroups.create_and_delete_server_group:
    -
      args:
        policies: ["affinity"]
      context:
        {{ user_context(tenants_amount, users_amount, use_existing_users) }}
      runner:
        {{ constant_runner(concurrency=concurrency, times=iterations, is_smoke=smoke) }}
      sla:
        {{ no_failures_sla() }}
